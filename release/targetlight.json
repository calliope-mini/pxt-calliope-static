{
    "id": "calliopemini",
    "nickname": "mini",
    "name": "makecode.calliope.cc",
    "title": "Microsoft MakeCode for Calliope mini",
    "description": "A Blocks / JavaScript code editor for the Calliope mini powered by Microsoft MakeCode.",
    "corepkg": "core",
    "cloud": {
        "workspace": false,
        "packages": true,
        "sharing": true,
        "thumbnails": true,
        "publishing": true,
        "importing": true,
        "preferredPackages": [
            "Microsoft/pxt-neopixel"
        ],
        "githubPackages": true,
        "cloudProviders": {
            "github": {}
        }
    },
    "compile": {
        "isNative": true,
        "hasHex": true,
        "deployDrives": "MINI",
        "driveName": "MINI",
        "hexMimeType": "application/x-calliope-hex",
        "openocdScript": "source [find interface/cmsis-dap.cfg]; source [find target/nrf51.cfg]",
        "flashUsableEnd": 245760,
        "flashEnd": 245760,
        "flashCodeAlign": 1024,
        "floatingPoint": true,
        "taggedInts": true,
        "utf8": false,
        "gc": true,
        "imageRefTag": 9,
        "patches": {
            "0.0.0 - 1.0.0": [
                {
                    "type": "package",
                    "map": {
                        "microbit": "core",
                        "microbit-bluetooth": "bluetooth",
                        "microbit-radio": "radio",
                        "microbit-devices": "devices",
                        "microbit-led": "",
                        "microbit-music": "",
                        "microbit-game": "",
                        "microbit-pins": "",
                        "microbit-serial": ""
                    }
                },
                {
                    "type": "missingPackage",
                    "map": {
                        "radio\\s*\\.": "radio",
                        "bluetooth\\s*\\.": "bluetooth",
                        "devices\\s*\\.": "devices"
                    }
                },
                {
                    "type": "api",
                    "map": {
                        "bluetooth\\s*\\.\\s*uartRead\\s*\\((.*?)\\)": "bluetooth.uartReadUntil($1)",
                        "bluetooth\\s*\\.\\s*uartWrite\\s*\\((.*?)\\)": "bluetooth.uartWriteUntil($1)",
                        "input\\s*\\.\\s*calibrate\\s*\\(": "input.calibrateCompass(",
                        "radio\\s*\\.\\s*onDataPacketReceived\\(\\s*\\(\\{\\s*receivedNumber\\s*\\}\\)\\s*=>\\s*\\{": "radio.onReceivedNumber(function (receivedNumber) {",
                        "radio\\s*\\.\\s*onDataPacketReceived\\(\\s*\\(\\{\\s*receivedString: name, receivedNumber: value\\s*\\}\\)\\s*=>\\s*\\{": "radio.onReceivedValue(function (name, value) {",
                        "radio\\s*\\.\\s*onDataPacketReceived\\(\\s*\\(\\{\\s*receivedString\\s*\\}\\)\\s*=>\\s*\\{": "radio.onReceivedString(function (receivedString) {",
                        "Math\\s*\\.\\s*random\\s*\\(": "Math.randomRange(0, "
                    }
                },
                {
                    "type": "blockId",
                    "map": {
                        "device_get_acceleration": "device_acceleration"
                    }
                },
                {
                    "type": "blockValue",
                    "map": {
                        "device_print_message.message": "text"
                    }
                }
            ],
            "0.0.0 - 1.4.12": [
                {
                    "type": "api",
                    "map": {
                        "DisplayMode\\s*\\.\\s*BackAndWhite": "DisplayMode.BlackAndWhite"
                    }
                }
            ]
        },
        "hidSelectors": [
            {
                "usagePage": "0xFF00",
                "usageId": "0x0001",
                "vid": "0x0d28",
                "pid": "0x0204"
            }
        ],
        "webUSB": true,
        "useNewFunctions": true,
        "nativeType": "thumb",
        "switches": {},
        "jsRefCounting": false,
        "vtableShift": 2,
        "noSourceInFlash": true
    },
    "runtime": {
        "mathBlocks": true,
        "loopsBlocks": true,
        "logicBlocks": true,
        "variablesBlocks": true,
        "textBlocks": true,
        "listsBlocks": true,
        "functionBlocks": true,
        "functionsOptions": {
            "useNewFunctions": true,
            "extraFunctionEditorTypes": [
                {
                    "typeName": "game.LedSprite",
                    "label": "LedSprite",
                    "icon": "send",
                    "defaultName": "sprite"
                }
            ]
        },
        "onStartColor": "#54C9C9",
        "onStartNamespace": "basic",
        "onStartWeight": 54
    },
    "simulator": {
        "autoRun": true,
        "enableTrace": true,
        "streams": true,
        "aspectRatio": 1.13,
        "parts": false,
        "partsAspectRatio": 0.69,
        "boardDefinition": {
            "visual": "calliope",
            "gpioPinBlocks": [
                [
                    "EDGE_P0"
                ],
                [
                    "EDGE_P1"
                ],
                [
                    "EDGE_P2"
                ],
                [
                    "EDGE_P3"
                ],
                [
                    "C_P4",
                    "C_P5",
                    "C_P6",
                    "C_P7"
                ],
                [
                    "C_P8",
                    "C_P9",
                    "C_P10",
                    "C_P11",
                    "C_P12"
                ],
                [
                    "C_P16"
                ]
            ],
            "gpioPinMap": {
                "P0": "EDGE_P0",
                "P1": "EDGE_P1",
                "P2": "EDGE_P2",
                "P3": "EDGE_P3",
                "C4": "C_P4",
                "C5": "C_P5",
                "C6": "C_P6",
                "C7": "C_P7",
                "C8": "C_P8",
                "C9": "C_P9",
                "C10": "C_P10",
                "C11": "C_P11",
                "C12": "C_P12",
                "C13": "C_P13",
                "C14": "C_P14",
                "C15": "C_P15",
                "C19": "C_P19",
                "C20": "C_P20",
                "EXT_PWR": "EXT_PWR",
                "SPKR": "SPKR",
                "BTN_A": "BTN_A",
                "BTN_B": "BTN_B",
                "MOTOR1": "M_OUT1",
                "MOTOR2": "M_OUT2"
            },
            "spiPins": {
                "MOSI": "C_P15",
                "MISO": "C_P14",
                "SCK": "C_P13"
            },
            "i2cPins": {
                "SDA": "C_P20",
                "SCL": "C_P19"
            },
            "analogInPins": [
                "P1",
                "P2",
                "C4",
                "C5",
                "C6"
            ],
            "groundPins": [
                "EDGE_GND"
            ],
            "threeVoltPins": [
                "EDGE_VCC"
            ],
            "attachPowerOnRight": true,
            "onboardComponents": [
                "accelerometer",
                "buttonpair",
                "ledmatrix",
                "speaker",
                "bluetooth",
                "thermometer",
                "compass",
                "speaker",
                "microphone",
                "rgbled"
            ],
            "useCrocClips": true,
            "marginWhenBreadboarding": [
                0,
                0,
                80,
                0
            ]
        }
    },
    "compileService": {
        "yottaTarget": "calliope-mini-classic-gcc",
        "yottaCorePackage": "microbit",
        "githubCorePackage": "calliope-mini/microbit",
        "gittag": "pxtgc-0",
        "serviceId": "calliope",
        "yottaBinary": "pxt-microbit-app-combined.hex"
    },
    "serial": {
        "nameFilter": "^(mbed Serial Port|DAPLink CMSIS-DAP)",
        "log": true,
        "useEditor": true,
        "editorTheme": {
            "graphBackground": "#d9d9d9",
            "lineColors": [
                "#6633cc",
                "#3891A6",
                "#3454D1",
                "#EF767A",
                "#F46197",
                "#107C10"
            ]
        },
        "vendorId": "0x0d28",
        "productId": "0x0204",
        "rawHID": true
    },
    "queryVariants": {
        "hidemenu": {
            "appTheme": {
                "hideMenuBar": true
            }
        }
    },
    "disableDocsUpload": true,
    "versions": {
        "target": "2.1.34",
        "pxt": "5.30.6"
    },
    "blocksprj": {
        "id": "blocksprj",
        "config": {
            "name": "{0} block",
            "dependencies": {
                "core": "*",
                "radio": "*"
            },
            "description": "",
            "files": [
                "main.blocks",
                "main.ts",
                "README.md"
            ],
            "additionalFilePaths": []
        },
        "files": {
            "main.blocks": "<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>",
            "main.ts": "\n",
            "README.md": ""
        }
    },
    "tsprj": {
        "id": "tsprj",
        "config": {
            "name": "{0} bit",
            "dependencies": {
                "core": "*",
                "radio": "*"
            },
            "description": "",
            "files": [
                "main.ts",
                "README.md"
            ],
            "additionalFilePaths": []
        },
        "files": {
            "main.ts": "basic.showLeds(`\n    . . . . .\n    . # . # .\n    . . . . .\n    # . . . #\n    . # # # .\n    `);",
            "README.md": ""
        }
    }
}